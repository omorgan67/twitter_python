from github import Github
import os
from dotenv import load_dotenv
import json
import lookml
import looker_sdk

load_dotenv() 
def run(r):
    git = Github(os.environ['GITHUB_PERSONAL_ACCESS_TOKEN']) # log into github using access token
    repo = git.get_repo(os.environ['GITHUB_REPOSITORY']) # access twitter repo 

    def create_explore(file_name):
        ex = lookml.Explore(file_name)
        ex.setProperty('always_filter','{filters: {\n field: event_date \n value: "'+ config.get('start_date') + ' to ' + config.get('end_date')+'"}}')
        print(ex)
        return(ex)

    def create_view(config, file_name): # create a view and feed in the conifg file & file name
        vw = lookml.View(file_name) # create a variable called vw that creates a vew from each file name 
        tmpDim = lookml.DimensionGroup('event') # 
        tmpDim.sql = "${TABLE}." + 'event'
        vw + tmpDim
        vw.addCount()
        vw.setProperty("sql_table_name","LOOKER_SCRATCH.zz_" + file_name)
        vw.setProperty("view_label", config.get('label', file_name))
        
        fields = config["fields"].split(",")
        for field in fields: # get a list of field objects, and split them apart by comma 
            vw + field
            if (field[-7:] == '_number'):
                vw[field].type = "number"
            elif (field[-5:] == '_date'):
                vw[field].type = "date"
            if (field[-3:]) == '_id':
                vw.addCountDistinct(vw[field])


        print(vw) # print just shows a string representing what's going on inside the computer
        return(vw) # return is how a function gives back a value
    
    proj = lookml.Project(
            repo="bryan-at-looker/twitter-tests-lookml"
            ,access_token=os.environ['GITHUB_PERSONAL_ACCESS_TOKEN']
            ,looker_host="https://marketplace.dev.looker.com/"
            ,looker_project_name="twitter-experimentation"
            )

    sdk = looker_sdk.init31() # instantiating the sdk 

    contents = repo.get_contents("") # getting metadata
    for content in contents: # getting the actual file data   
        if (content.path[0]!='.'): # if the first character of the file isn't a "." 
            new_file_name = content.path.replace('.json', '')
            file_contents = repo.get_contents(content.path)
            config = json.loads(file_contents.decoded_content)
            view = create_view(config, new_file_name) # print (content.path)
            explore = create_explore(new_file_name)
            fl = lookml.File(view)
            fl + explore
            fl.path = 'autogenerated/' + fl.path
            proj.put(fl)
            proj.deploy()


            insert_sql = "INSERT INTO LOOKER_SCRATCH.z_all_tests SELECT '%s', '%s', '%s'::date, '%s'::date, '%s'" % (new_file_name, config['label'], config['start_date'], config['end_date'], config['fields'])
            sql_query = sdk.create_sql_query(body=looker_sdk.models.SqlQueryCreate(model_name='twitter-experimentation', sql=insert_sql))
            sdk.run_sql_query(slug=sql_query.slug, result_format="json")
            # me = sdk.me()
            # print(me)
        


